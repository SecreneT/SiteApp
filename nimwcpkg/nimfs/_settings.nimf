#? stdtmpl | standard
#
#
#proc genSettings(c: var TData): string =
  <div id="settings">
    <h1>ScereneT</h1>
    <div class="container-fluid">
      <div class="row">
        <div class="col-12 col-md-6">
          <hr>
          <label class="label">Blog</label>
          <div class="buttons columns is-mobile">
            <div class="column"><a href="/blogpagenew" class="button is-small">Add blogpost</a></div>
            <div class="column"><a href="/editpage/blogallpages" class="button is-small">Edit blogpost</a></div>
          </div>
          <hr>
          <label class="label">Pages</label>
          <div class="buttons columns is-mobile">
            <div class="column"><a href="/pagenew" class="button is-small">Add page</a></div>
            <div class="column"><a href="/editpage/allpages" class="button is-small">Edit pages</a></div>
          </div>
          <hr>
          <label class="label">Plugins</label>
          <div class="buttons columns is-mobile">
            <div class="column"><a href="/plugins" class="button is-small">Installed Plugins</a></div>
            <div class="column"><a href="/plugins/repo" class="button is-small">Plugin Store</a></div>
          </div>
          <hr>
          <label class="label">Users</label>
          <div class="buttons columns is-mobile">
            <div class="column"><a href="/users" class="button is-small">Users</a></div>
            <div class="column"><a href="/users/profile" class="button is-small">My profile</a></div>
          </div>
          <hr>
          <label class="label">Files</label>
          <div class="buttons columns is-mobile">
            <div class="column"><a href="/files" class="button is-small">Files</a></div>
          </div>
          <hr>
  #
  #if c.rank == Admin or defined(demo):
    <label class="label">Core</label>
    <div class="buttons columns is-mobile">
    <div class="column"><a  class="button is-small"
    #
    #if c.rank == Admin:
      href="/settings/blog"
    #end if
    #
    >Blog settings</a></div>
    <div class="column"><a class="button is-small"
    #
    #if c.rank == Admin:
      href="/settings/edit"
    #end if
    #
    >Edit Head, Navbar, Footer</a></div>
    </div>
    <hr>
    <label class="label">CSS</label>
    <div class="buttons columns is-mobile">
    <div class="column"><a class="button is-small"
    #
    #if c.rank == Admin:
      href="/settings/editcss"
    #end if
    #
    >Edit Core CSS</a></div>
    <div class="column"><a class="button is-small"
    #
    #if c.rank == Admin:
      href="/settings/editcsscustom"
    #end if
    #
    >Edit Custom CSS</a></div>
    </div>
    <hr>
    <label class="label">JavaScript</label>
    <div class="buttons columns is-mobile">
    <div class="column"><a class="button is-small"
    #
    #if c.rank == Admin:
              href="/settings/editjs"
    #end if
    #
    >Edit Core JS</a></div>
    <div class="column"><a class="button is-small"
    #
    #if c.rank == Admin:
      href="/settings/editjscustom"
    #end if
    #
    >Edit Custom JS</a></div>
    </div>
    <hr>
    <label class="label">Server</label>
    <div class="buttons columns is-mobile">
    <div class="column"><a class="button is-small" title="Server Info"
    #
    #if c.rank == Admin:
      href="/settings/serverinfo"
    #end if
    #
    >Server info</a></div>
    <div class="column"><a  class="button is-small" title="Server Config"
    #
    #if c.rank == Admin:
      href="/settings/config"
    #end if
    #
    >Config</a></div>
    <div class="column"><a class="button is-small" title="Server Logs"
    #
    #if c.rank == Admin:
      href="/settings/logs"
    #end if
    #
    >Logs</a></div>
    <div class="column"><a class="button is-small restartServer" title="Force Server Restart, 9 Seconds delay" onclick="${ notifyHtml("Server Restarting now, please wait a few seconds") }"
    #
    #if c.rank == Admin:
      href="/settings/forcerestart"
    #end if
    #
    >Force Restart</a></div>
    <div class="column"><a class="button is-small" title="Logs Compressed Backup"
    #
    #if c.rank == Admin:
      href="/settings/logsbackup"
    #end if
    #
    >Backup Logs</a></div>
    <div class="column"><a class="button is-small" title="Database Compressed Backup"
    #
    #if c.rank == Admin:
      href="/settings/databasebackup"
    #end if
    #
    >Backup Database</a></div>
    </div>
    <hr>
    #
    #when defined(firejail):
      <label class="label">Security</label>
      <div class="buttons columns is-mobile">
      <div class="column"><a class="button is-small" title="Firejail security is built-in on the Core of NimWC"
      #
      #if c.rank == Admin:
        href="/settings/firejail"
      #end if
      #
      >Firejail</a></div>
      </div>
    #end when
    #
  #
  #end if  ## L40
  #
  #
  #when defined(demo):
    <hr>
    <div class="notification is-danger" style="padding-top: 15px;">
      <b class="is-uppercase has-text-warning" title="Test user cant access the Core">
        Some options are disabled on Demo!.
      </b>
    </div>
  #end when
  #
        </div>
      </div>
    </div>
  </div>
#end proc
#
#
#proc genSettingsEdit(c: var TData): string =
  #let pageData = getAllRows(db, sql"SELECT analytics, head, navbar, footer, title FROM settings WHERE id = ?", "1")
  #
  #for page in pageData:
    <div id="settingsEdit">
    <h1>HTML elements</h1>
    <p>The HEAD, NAVBAR and FOOTER block will be inserted on all your pages. You can disable them for individual pages/blogposts when you are editing them. To completely disable them - delete their content below.</p>
    <hr>
    <form class="standard settings" method="post" action="/settings/update">
      <div>
        <label class="label">Title</label>
        <input type="text" class="input" name="title" id="title" required value="${page[4]}" style="width: 300px;" dir="auto" onblur="this.value=this.value.replace(/\s\s+/g, ' ').replace(/^\s+|\s+$$/g, '')"/>
      </div>
      <br>
      <div>
          <button type="submit" class="settingsSave button is-success">Save</button>
      </div>
      <hr>
      <div>
        <div>HTML <code> &lt;head&gt; </code></div>
        <textarea name="head" id="htmlSettings1">${page[1]}</textarea>
      </div>
      <br>
      <div>
        <div>HTML <code> &lt;header&gt; </code> & <code> &lt;navbar&gt; </code> </div>
        <textarea name="navbar" id="htmlSettings2">${page[2]}</textarea>
      </div>
      <br>
      <div>
        <div>HTML <code> &lt;footer&gt; </code> </div>
        <textarea name="footer" id="htmlSettings3">${page[3]}</textarea>
      </div>
      <div style="margin-top: 15px;">
          <button type="submit" class="settingsSave button is-success">Save</button>
      </div>
    </form>
    </div>
    <div id="notifySaved"> Saved HTML </div>
  #end for
#end proc
#
#
#proc genSettingsEditJs(c: var TData, customJs: bool): string =
  #var jsFile: string
  #if customJs:
    #jsFile = "public/js/js_custom.js"
  #else:
    #jsFile = "public/js/js.js"
  #end if
  #
  <style> .CodeMirror { border: 1px solid #eee; height: auto!important; } </style>
  <div id="settingsEdit">
    <h1>Edit JS file</h1>
    <h4> ${ jsFile } </h4>
    <form class="standard settings" method="post" action="/settings/updatejs">
      <input name="customJs" value="${ customJs }" style="display: none">
      <div>
        <button type="submit" onclick="document.getElementById('save').setAttribute('data-ischanged', '0');" class="settingsSaveCode button is-success" style="margin-bottom: 5px;">Save</button>
      </div>
      <div>
  <textarea name="js" id="settingsCode" >
  #
  #for line in lines(jsFile):
$line
  #end for
  #
  </textarea>
  </div>
  <div>
  <button type="submit" onclick="document.getElementById('save').setAttribute('data-ischanged', '0');" class="settingsSaveCode button is-success">Save</button>
  </div>
  </form>
  </div>
  <div id="notifySaved"> Saved ${ jsFile } </div>
#end proc
#
#
#proc genSettingsEditCss(c: var TData, customCss: bool): string =
  #var cssFile: string
  #if customCss:
    #cssFile = "public/css/style_custom.css"
  #else:
    #cssFile = "public/css/style.css"
  #end if
  #
  <style> .CodeMirror { border: 1px solid #eee; height: auto!important; } </style>
  <div id="settingsEdit">
  <h1>Edit CSS file</h1>
  <h4> ${ cssFile } </h4>
  <form class="standard settings" method="post" action="/settings/updatecss">
    <input name="customCss" value="${ customCss }" style="display:none">
    <div>
      <button type="submit" onclick="document.getElementById('save').setAttribute('data-ischanged', '0');" class="settingsSaveCode button is-success" style="margin-bottom: 5px;">Save</button>
    </div>
    <div>
  <textarea name="css" id="settingsCode" >
  #
  #for line in lines(cssFile):
$line
  #end for
  #
  </textarea>
  </div>
  <div>
  <button type="submit" onclick="document.getElementById('save').setAttribute('data-ischanged', '0');" class="settingsSaveCode button is-success">Save</button>
  </div>
  </form>
  </div>
  <div id="notifySaved"> Saved ${ cssFile } </div>
#end proc
#
#
#proc genSettingsBlog(c: var TData): string =
  <div id="settingsEdit">
  <h1>Edit blog settings</h1>
  <form class="standard settings" method="post" action="/settings/updateblogsettings">
    <div style="max-width: 300px; margin-bottom: 20px;">
      <h2>Blog order</h2>
      <div class="field">
        <label class="label">Blogorder</label>
        <div class="control select">
          <select name="blogorder">
            <option value="url">URL</option>
            <option value="published">Published</option>
            <option value="modified">Modified</option>
            <option value="name">Name</option>
          </select>
        </div>
      </div>
      <div class="field">
        <label class="label">Blogsort</label>
        <div class="control select">
          <select name="blogsort">
            <option value="DESC">Descending</option>
            <option value="ASC">Ascending</option>
          </select>
        </div>
      </div>
    </div>
    <div>
      <button type="submit" class="button is-success">Save</button>
    </div>
  </form>
  </div>
#end proc
